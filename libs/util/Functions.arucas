class Predicate{
    static var ALWAYS_TRUE = fun (value) true;
    static var ALWAYS_FALSE = fun (value) false;
    static fun all(predicates...){
        return fun (value){
            foreach (pred : predicates) {
                if (!pred(value)) {
                    return false;
                }
            }
            return true;
        };
    }
    static fun any(predicates...){
        return fun (value){
            foreach (pred : predicates) {
                if(pred(value)){
                    return true;
                }
            }
            return false;
        };
    }
    static fun and(a, b){
        return fun (value){
            return a(value) && b(value);
        };
    }
    static fun or(a,b){
        return fun (value){
            return a(value) || b(value);
        };
    }
    static fun xor(a,b){
        return fun (value){
            return a(value) ~ b(value);
        };
    }
    static fun alwaysFalse(){
        return Predicate.ALWAYS_FALSE;
    }
    static fun alwaysTrue(){
        return Predicate.ALWAYS_TRUE;
    }
}