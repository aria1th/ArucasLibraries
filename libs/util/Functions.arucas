ALWAYS_TRUE = fun (value) true;
ALWAYS_FALSE = fun (value) false;

class Predicate {
    static fun all(predicates...) {
        return fun (value) {
            foreach (pred : predicates) {
                if (!pred(value)) {
                    return false;
                }
            }
            return true;
        };
    }

    static fun any(predicates...) {
        return fun (value) {
            foreach (pred : predicates) {
                if (pred(value)) {
                    return true;
                }
            }
            return false;
        };
    }

    static fun and(a: Function, b: Function){
        return fun (value) {
            return a(value) && b(value);
        };
    }

    static fun or(a: Function, b: Function){
        return fun (value) {
            return a(value) || b(value);
        };
    }

    static fun xor(a: Function, b: Function) {
        return fun (value) {
            return a(value) ~ b(value);
        };
    }

    static fun alwaysFalse(){
        return ALWAYS_FALSE;
    }

    static fun alwaysTrue(){
        return ALWAYS_TRUE;
    }
}